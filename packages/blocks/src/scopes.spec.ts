import { expect, test } from 'vitest';
import { ROLES } from './roles';
import { SCOPES, hasScope } from './scopes';

/**
 * just double book keeping!
 */
test.each([
  [ROLES.teamAdmin, SCOPES.teamCreate, false],
  [ROLES.teamAdmin, SCOPES.teamRead, true],
  [ROLES.teamAdmin, SCOPES.teamUpdate, true],
  [ROLES.teamAdmin, SCOPES.teamAccessRead, true],
  [ROLES.teamAdmin, SCOPES.teamAccessWrite, true],

  [ROLES.teamMember, SCOPES.teamCreate, false],
  [ROLES.teamMember, SCOPES.teamRead, true],
  [ROLES.teamMember, SCOPES.teamUpdate, false],
  [ROLES.teamMember, SCOPES.teamAccessRead, true],
  [ROLES.teamMember, SCOPES.teamAccessWrite, false],

  [ROLES.projectOwner, SCOPES.projectRead, true],
  [ROLES.projectOwner, SCOPES.projectUpdate, true],
  [ROLES.projectOwner, SCOPES.projectAccessRead, true],
  [ROLES.projectOwner, SCOPES.projectVisibility, true],
  [ROLES.projectOwner, SCOPES.projectAccessWrite, true],
  [ROLES.projectOwner, SCOPES.projectPublish, true],
  [ROLES.projectOwner, SCOPES.blockRead, true],
  [ROLES.projectOwner, SCOPES.blockWrite, true],
  [ROLES.projectOwner, SCOPES.commentRead, true],
  [ROLES.projectOwner, SCOPES.commentWrite, true],
  [ROLES.projectOwner, SCOPES.commentUpdate, true],
  [ROLES.projectOwner, SCOPES.commentResolve, true],
  [ROLES.projectOwner, SCOPES.commentDelete, true],

  [ROLES.projectEditor, SCOPES.projectRead, true],
  [ROLES.projectEditor, SCOPES.projectUpdate, true],
  [ROLES.projectEditor, SCOPES.projectVisibility, false],
  [ROLES.projectEditor, SCOPES.projectAccessRead, true],
  [ROLES.projectEditor, SCOPES.projectAccessWrite, false],
  [ROLES.projectEditor, SCOPES.projectPublish, true],
  [ROLES.projectEditor, SCOPES.blockRead, true],
  [ROLES.projectEditor, SCOPES.blockWrite, true],
  [ROLES.projectEditor, SCOPES.commentRead, true],
  [ROLES.projectEditor, SCOPES.commentWrite, true],
  [ROLES.projectEditor, SCOPES.commentUpdate, false],
  [ROLES.projectEditor, SCOPES.commentResolve, true],
  [ROLES.projectEditor, SCOPES.commentDelete, false],

  [ROLES.projectComment, SCOPES.projectRead, true],
  [ROLES.projectComment, SCOPES.projectUpdate, false],
  [ROLES.projectComment, SCOPES.projectAccessRead, false],
  [ROLES.projectComment, SCOPES.projectAccessWrite, false],
  [ROLES.projectComment, SCOPES.projectPublish, false],
  [ROLES.projectComment, SCOPES.blockRead, true],
  [ROLES.projectComment, SCOPES.blockWrite, false],
  [ROLES.projectComment, SCOPES.commentRead, true],
  [ROLES.projectComment, SCOPES.commentWrite, true],
  [ROLES.projectComment, SCOPES.commentUpdate, false],
  [ROLES.projectComment, SCOPES.commentResolve, false],
  [ROLES.projectComment, SCOPES.commentDelete, false],

  [ROLES.projectView, SCOPES.projectRead, true],
  [ROLES.projectView, SCOPES.projectUpdate, false],
  [ROLES.projectView, SCOPES.projectAccessRead, false],
  [ROLES.projectView, SCOPES.projectAccessWrite, false],
  [ROLES.projectView, SCOPES.projectPublish, false],
  [ROLES.projectView, SCOPES.blockRead, true],
  [ROLES.projectView, SCOPES.blockWrite, false],
  [ROLES.projectView, SCOPES.commentRead, true],
  [ROLES.projectView, SCOPES.commentWrite, false],
  [ROLES.projectView, SCOPES.commentUpdate, false],
  [ROLES.projectView, SCOPES.commentResolve, false],
  [ROLES.projectView, SCOPES.commentDelete, false],

  [ROLES.manifest, SCOPES.projectRead, true],
  [ROLES.manifest, SCOPES.projectUpdate, false],
  [ROLES.manifest, SCOPES.projectAccessRead, false],
  [ROLES.manifest, SCOPES.projectAccessWrite, false],
  [ROLES.manifest, SCOPES.projectPublish, false],
  [ROLES.manifest, SCOPES.blockRead, false],
  [ROLES.manifest, SCOPES.blockWrite, false],
  [ROLES.manifest, SCOPES.commentRead, false],
  [ROLES.manifest, SCOPES.commentWrite, false],
  [ROLES.manifest, SCOPES.commentUpdate, false],
  [ROLES.manifest, SCOPES.commentResolve, false],
  [ROLES.manifest, SCOPES.commentDelete, false],

  [ROLES.public, SCOPES.projectRead, true],
  [ROLES.public, SCOPES.projectUpdate, false],
  [ROLES.public, SCOPES.projectAccessRead, false],
  [ROLES.public, SCOPES.projectAccessWrite, false],
  [ROLES.public, SCOPES.projectPublish, false],
  [ROLES.public, SCOPES.blockRead, true],
  [ROLES.public, SCOPES.blockWrite, false],
  [ROLES.public, SCOPES.commentRead, false],
  [ROLES.public, SCOPES.commentWrite, false],
  [ROLES.public, SCOPES.commentUpdate, false],
  [ROLES.public, SCOPES.commentResolve, false],
  [ROLES.public, SCOPES.commentDelete, false],
])('role %s hasScope %s == %d', (role, scope, has) => {
  expect(hasScope(role, scope)).toEqual(has);
});
